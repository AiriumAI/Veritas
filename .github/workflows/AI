<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Veritas Token</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            background: radial-gradient(circle, #001100, #000000);
            color: #00ff00;
            font-family: 'Courier New', monospace;
            overflow-x: hidden;
        }
        .glow-text {
            text-shadow: 0 0 15px #00ff00, 0 0 30px #00ff00, 0 0 45px #00ff00;
        }
        .hover-underline:hover::after {
            content: '';
            display: block;
            width: 100%;
            border-bottom: 2px solid #00ff00;
            animation: underline 0.5s ease-in-out;
        }
        @keyframes underline {
            from {
                width: 0%;
            }
            to {
                width: 100%;
            }
        }
        .matrix-effect {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            background: url('https://source.unsplash.com/1920x1080/?matrix,code') no-repeat center;
            opacity: 0.1;
            background-size: cover;
        }
        .button-hover {
            box-shadow: 0 0 10px #00ff00;
            transition: box-shadow 0.3s ease-in-out;
        }
        .button-hover:hover {
            box-shadow: 0 0 25px #00ff00, 0 0 50px #00ff00;
        }
        #neuralNetwork {
            position: fixed;
            top: 0;
            left: 0;
            z-index: -1;
        }
        .particle {
            position: absolute;
            background-color: #00ff00;
            border-radius: 50%;
            animation: move 5s infinite ease-in-out;
        }
        @keyframes move {
            0% {
                transform: translate(0, 0);
            }
            50% {
                transform: translate(100px, 100px);
            }
            100% {
                transform: translate(0, 0);
            }
        }
        .chat-container {
            background: rgba(0, 0, 0, 0.8);
            padding: 20px;
            border-radius: 10px;
        }
        .chat-container .user-message, .chat-container .ai-message {
            margin: 10px 0;
            padding: 10px;
            border-radius: 5px;
        }
        .chat-container .user-message {
            background: #004400;
            text-align: right;
        }
        .chat-container .ai-message {
            background: #002200;
            text-align: left;
        }
    </style>
</head>
<body>
    <canvas id="neuralNetwork"></canvas>
    <div class="matrix-effect"></div>
    <header class="p-6 bg-black shadow-md">
        <div class="container mx-auto flex justify-between items-center">
            <h1 class="text-4xl glow-text">Veritas Token</h1>
            <nav class="flex gap-6">
                <a href="#about" class="hover-underline">About</a>
                <a href="#features" class="hover-underline">Features</a>
                <a href="#roadmap" class="hover-underline">Roadmap</a>
                <a href="#contact" class="hover-underline">Contact</a>
            </nav>
        </div>
    </header>

    <main>
        <section id="hero" class="h-screen flex items-center justify-center text-center relative">
            <div>
                <h2 class="text-5xl glow-text">Truth at Your Fingertips</h2>
                <p class="mt-4 text-xl">Explore the Veritas Ecosystem, where truth transcends boundaries.</p>
                <a href="#about" class="mt-8 inline-block px-6 py-3 bg-green-600 text-black rounded shadow button-hover">Discover More</a>
            </div>
        </section>

        <section id="dataVisualizationSection" class="py-16 bg-gray-900">
            <div class="container mx-auto text-center">
                <h3 class="text-3xl glow-text mb-6">Real-Time Data</h3>
                <canvas id="dataVisualization" class="mx-auto w-full max-w-lg"></canvas>
            </div>
        </section>

        <section id="about" class="py-16 bg-gray-900">
            <div class="container mx-auto text-center">
                <h3 class="text-3xl glow-text mb-6">About Veritas</h3>
                <p class="text-lg">Veritas Token (VER) revolutionizes truth-validation through blockchain and AI. Join us in a movement to reclaim truth in an era of deception.</p>
            </div>
        </section>

        <section id="features" class="py-16 bg-black">
            <div class="container mx-auto text-center">
                <h3 class="text-3xl glow-text mb-6">Features</h3>
                <ul class="space-y-6">
                    <li>Immutable Blockchain Records</li>
                    <li>VeritasAI: Cognitive Truth Validation</li>
                    <li>Decentralized Validation Nodes</li>
                    <li>Interactive Governance</li>
                </ul>
            </div>
        </section>

        <section id="roadmap" class="py-16 bg-gray-900">
            <div class="container mx-auto text-center">
                <h3 class="text-3xl glow-text mb-6">Roadmap</h3>
                <p>Q1 2024: Launch Platform</p>
                <p>Q2 2024: Expand Validator Network</p>
                <p>Q3 2024: Introduce Advanced AI Features</p>
            </div>
        </section>

        <section id="chatbot" class="py-16 bg-black">
            <div class="container mx-auto text-center">
                <h3 class="text-3xl glow-text mb-6">VeritasAI Chat</h3>
                <div class="chat-container mx-auto w-full max-w-lg">
                    <div id="chatMessages" class="h-64 overflow-y-auto"></div>
                    <input id="chatInput" type="text" placeholder="Ask VeritasAI..." class="w-full p-3 rounded bg-gray-800 text-green-300 mt-4">
                </div>
            </div>
        </section>
    </main>

    <footer class="py-6 bg-gray-900 text-center">
        <p>Â© 2024 Veritas Token. All Rights Reserved.</p>
    </footer>

    <script>
        // Real-Time Data Visualization using Chart.js
        const ctx = document.getElementById('dataVisualization').getContext('2d');
        const chart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
                datasets: [{
                    label: 'Truth Validations',
                    data: [12, 19, 3, 5, 2, 3],
                    borderColor: '#00ff00',
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: false
                    }
                }
            }
        });

        // Neural Network Animation
        const canvas = document.getElementById('neuralNetwork');
        const ctxNet = canvas.getContext('2d');
        function drawNetwork() {
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
            ctxNet.clearRect(0, 0, canvas.width, canvas.height);
            for (let i = 0; i < 100; i++) {
                const x = Math.random() * canvas.width;
                const y = Math.random() * canvas.height;
                const size = Math.random() * 3;
                ctxNet.fillStyle = '#00ff00';
                ctxNet.beginPath();
                ctxNet.arc(x, y, size, 0, Math.PI * 2);
                ctxNet.fill();
            }
        }
        setInterval(drawNetwork, 50);

        // Interactive Particles
        function createParticles() {
            for (let i = 0; i < 50; i++) {
                const particle = document.createElement('div');
                particle.className = 'particle';
                particle.style.width = `${Math.random() * 5}px`;
                particle.style.height = `${Math.random() * 5}px`;
                particle.style.top = `${Math.random() * window.innerHeight}px`;
                particle.style.left = `${Math.random() * window.innerWidth}px`;
                document.body.appendChild(particle);
            }
        }
        createParticles();

        // AI Chatbot Integration
        const chatInput = document.getElementById('chatInput');
        const chatMessages = document.getElementById('chatMessages');
        chatInput.addEventListener('keypress', function (e) {
            if (e.key === 'Enter') {
                const userMessage = chatInput.value;
                const userBubble = document.createElement('div');
                userBubble.className = 'user-message';
                userBubble.textContent = userMessage;
                chatMessages.appendChild(userBubble);
                chatInput.value = '';

                // Simulate AI response
                setTimeout(() => {
                    const aiMessage = document.createElement('div');
                    aiMessage.className = 'ai-message';
                    aiMessage.textContent = `AI Response to: ${userMessage}`;
                    chatMessages.appendChild(aiMessage);
                }, 1000);
            }
        });
    </script>
</body>
</html>
